#include "GlobalVariables.jsx"/*** Class PowerPadWrapper ****************************************************************************/function PowerPadWrapper(pID, pPadFrame){    this.id = pID;    this.type = NODE_TYPE_POWER;    this.tag = "Power_" + this.id;    // pPadFrame.name = this.tag;    this.padFrame = pPadFrame;    this.framePoints = [];    for(var i=0;i<pPadFrame.pathPoints.length;i++){        this.framePoints.push({x: point2mm(Math.abs(pPadFrame.pathPoints[i].anchor[0])),                                y: point2mm((-1) * Math.abs(pPadFrame.pathPoints[i].anchor[1]))});    }    if(pPadFrame.name == "cathode"){        this.polar = 0;    } else if(pPadFrame.name == "anode"){        this.polar = 1;    }    this.center = {};    this.center.x = point2mm(Math.abs(this.padFrame.visibleBounds[0] + this.padFrame.visibleBounds[2])/2);    this.center.y = (-1) * (point2mm(Math.abs(this.padFrame.visibleBounds[1] + this.padFrame.visibleBounds[3])/2));    this.distanceTo = function(pLedWrapper){        xDistance = Math.abs(this.center.x - pLedWrapper.center.x);        yDistance = Math.abs(this.center.y - pLedWrapper.center.y);        return Math.sqrt(xDistance*xDistance + yDistance*yDistance);    };    this.getLeft = function(){        return point2mm(Math.abs(this.padFrame.visibleBounds[0]));    };    this.getTop = function(){        return point2mm(Math.abs(this.padFrame.visibleBounds[1]));    };    this.getRight = function(){        return point2mm(Math.abs(this.padFrame.visibleBounds[2]));    };    this.getBottom = function(){        return point2mm(Math.abs(this.padFrame.visibleBounds[3]));    };}